- if (team.includes(user, session.team) || admin)
  .edit: a.button( href: '/teams/' + team + '/edit' ) Edit

h1= title(team.entry.name || team.name)

- if (team.invited(session.invite))
  h2 You're invited to this team!
  p.accept
    a.button.scary( href: '/login/github' ) Accept Invitation
    |  via
    img( src: '/images/github.png', style: 'margin-bottom: -4px;' )
    | github

- if (admin || (deployment && team.includes(user)))
  - lastDeploy = team.lastDeploy
  - if (lastDeploy)
    h2.deploy-status.done Successfully Deployed
      .details
        - lastDeployedAt = new Date(lastDeploy._id.generationTime)
        time( datetime: lastDeployedAt.toISOString(),
              title: lastDeployedAt.toISOString() )
          = relativeDate(lastDeployedAt)
        &nbsp;&mdash;
        a( href: '#instructions' ) Show deploy instructions
  - else
    h2.deploy-status.pending Not Yet Deployed
  .instructions
    ul.platforms
      li: label use:
      li: a( href: '#joyent' ) Joyent
      li: a( href: '#heroku' ) Heroku
      li: a( href: '#linode' ) Linode
    .platform#joyent
      ol
        li require('nko')('#{team.code}'); 
          a( href: 'https://github.com/nko2/website/tree/master/module#readme' ) What is this?
        li git remote add joyent git://no.de/foo.git
        li git push joyent master
    .platform#heroku
      ol
        a( href: 'http://blog.nodeknockout.com/post/9262660989/countdown-to-ko-10-deploying-your-node-js-app-to' ) Detailed instuctions
        li require('nko')('#{team.code}'); 
          a( href: 'https://github.com/nko2/website/tree/master/module#readme' ) What is this?
        li heroku login
        li git remote add heroku git@heroku.com:nko2-#{team.slug}.git
        li git push heroku master
    .platform#linode
      ol
        a( href: 'http://blog.nodeknockout.com/post/9300619913/countdown-to-ko-14-deploying-your-node-js-app-to' ) Detailed instuctions
        li require('nko')('#{team.code}'); 
          a( href: 'https://github.com/nko2/website/tree/master/module#readme' ) What is this?
        li export NODE_ENV=production

- if (!team.entry.name)
  - if (admin || team.includes(user))
    h2.entry-info-missing Entry Info Missing
      a.button( href: '/teams/' + team + '/edit' ) Add &raquo;
- else
  .entry
    - if (url = team.entry.url)
      img.screenshot( src: 'http://pinkyurl.com/i?url=' + encodeURIComponent(url) + '&out-format=png&resize=160x93' )
      h2: a( href: url  )= team.entry.name
    - else
      img.screenshot( src: '/images/blank.png' )
      h2= team.entry.name
    h3= 'by ' + team.name
    .clear
    != markdown(team.entry.description)
    - if (team.entry.instructions)
      h4 Judging Instructions
      != markdown(team.entry.instructions)

- if (people.length)
  h2 Who
  ul.people
    - each person in people
      li
        img.avatar( src: avatar_url(person) )
        a( href: '/people/' + person.id )= person.github.login
        - if (person.location)
          |  &mdash;
          = person.location

- if (team.invites.length)
  h2 Invites (#{team.invites.length} pending)
  - if (team.includes(user, session.team) || admin)
    p Check your email for invites or resend invites below.
    ul.invites
      - each invite in team.invites
        li
          #{invite.email} &mdash;
          a( href: '/teams/' + team + '/invites/' + invite.id, rel: 'nofollow' ) resend
          span.sending


- if (team.entry.colophon)
  h2 How
  != markdown(team.entry.colophon)

- if (false && team.description) // no longer show team description
  h2 What
  != markdown(team.description)

- if (voting)
  h1 Votes
  h2 Your Vote
  != partial('votes/form', { vote: vote })
  h2 All Votes
  ul.votes!= partial('votes/vote', votes)
